//
//  MatchListPresenter.swift
//  Brasileirao
//
//  Created by Fabio Martinez on 08/01/2019.
//  Copyright (c) 2018 Fabio Martinez. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MatchListPresentationLogic {
    func presentFetchedMatches(response: MatchList.FetchMatches.Response.Succes)
    func presentErrorOnFetch(response: MatchList.FetchMatches.Response.Error)
    func presentMatchDetails(response: MatchList.Route.Response)
}

class MatchListPresenter: MatchListPresentationLogic {
    
    weak var viewController: MatchListDisplayLogic?

    func presentFetchedMatches(response: MatchList.FetchMatches.Response.Succes) {
        var displayedMatches: [MatchViewModel] = []
        for match in response.matches {
            displayedMatches.append(MatchViewModel.init(match: match, showSeparatorView: true))
        }
        let viewModel = MatchList.FetchMatches.ViewModel(matches: displayedMatches, screentitle: screenTitle(round: response.round))
        viewController?.displayFetchedMatches(viewModel: viewModel)
    }

    func presentErrorOnFetch(response: MatchList.FetchMatches.Response.Error) {
        let bgCollorRed = UIColor.init(red: 250/255, green: 80/255, blue: 80/255, alpha: 1)
        let messageViewModel = MatchList.FetchMatches.ViewModel.MessageViewModel(message: response.message, bgCollor: bgCollorRed)
        let refreshViewModel = MatchList.FetchMatches.ViewModel.RefreshViewModel(displayRefreshControl: false)
        viewController?.displayRefreshControl(viewModel: refreshViewModel)
        viewController?.displayMessage(viewModel: messageViewModel)
    }

    func presentMatchDetails(response: MatchList.Route.Response) {
        viewController?.showMatchDetails(viewModel: MatchList.Route.ViewModel())
    }

    private func screenTitle(round: Int) -> (String) {
        return "Rodada \(round)"
    }
    
}
